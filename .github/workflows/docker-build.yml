---
name: Build and Push Docker Image

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Get version
        id: get_version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:${{ env.VERSION }}
      -
        name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = process.env.GITHUB_REF.replace('refs/tags/', '');
            const version = tag.replace('v', '');
            const { data: release } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tag,
              name: `Release ${version}`,
              body: `Release of version ${version}\n\nSee the [CHANGELOG](${context.repo.owner}/${context.repo.repo}/blob/main/CHANGELOG.md) for details.`,
              draft: false,
              prerelease: false
            });
            console.log(`Created release: ${release.html_url}`);
