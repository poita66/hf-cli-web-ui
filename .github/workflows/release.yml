---
name: Release

on:
  push:
    branches:
      - 'release/*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(grep -E "^version = " backend/pyproject.toml | cut -d'"', -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version detected: $VERSION"

      - name: Create Release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const tag = `v\${process.env.VERSION}`;
            const releaseName = `Release \${tag}`;
            
            // Check if release already exists
            try {
              const existingRelease = await github.rest.repos.getReleaseByTag({
                owner,
                repo,
                tag: tag
              });
              console.log(`Release \${tag} already exists`);
            } catch (error) {
              // Release doesn't exist, so create it
              console.log(`Creating release for tag \${tag}`);
              await github.rest.repos.createRelease({
                owner,
                repo,
                tag_name: tag,
                name: releaseName,
                body: `Release notes for version \${tag}\n\n` +
                      `- Backend updated to version \${tag}\n` +
                      `- Frontend updated to version \${tag}\n`,
                draft: false,
                prerelease: false
              });
            }

